:mod:`eth1spec.base_types`
==========================

.. py:module:: eth1spec.base_types

Numeric Types
-------------


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   eth1spec.base_types.Uint




Attributes
~~~~~~~~~~

.. autoapisummary::

   eth1spec.base_types.Bytes
   eth1spec.base_types.Bytes64
   eth1spec.base_types.Bytes32
   eth1spec.base_types.Bytes20
   eth1spec.base_types.Bytes8
   eth1spec.base_types.U256


Module Details
---------------

Uint
~~~~

Unsigned positive integer.


.. class:: Uint


   Bases: :py:obj:`int`

   .. attribute:: __slots__
      :annotation: = []

      

   .. method:: from_be_bytes(cls: Type, buffer: Bytes) -> Uint
      :classmethod:

      Converts a sequence of bytes into an arbitrarily sized unsigned integer
      from its big endian representation.

      :param buffer: Bytes to decode.
      :type buffer: `Bytes`

      :returns: **self** -- Unsigned integer decoded from `buffer`.
      :rtype: `Uint`


   .. method:: __radd__(self, left: int) -> Uint

      Return value+self.


   .. method:: __add__(self, right: int) -> Uint

      Return self+value.


   .. method:: __iadd__(self, right: int) -> Uint


   .. method:: __sub__(self, right: int) -> Uint

      Return self-value.


   .. method:: __rsub__(self, left: int) -> Uint

      Return value-self.


   .. method:: __isub__(self, right: int) -> Uint


   .. method:: __mul__(self, right: int) -> Uint

      Return self*value.


   .. method:: __rmul__(self, left: int) -> Uint

      Return value*self.


   .. method:: __imul__(self, right: int) -> Uint


   .. method:: __floordiv__(self, right: int) -> Uint

      Return self//value.


   .. method:: __rfloordiv__(self, left: int) -> Uint

      Return value//self.


   .. method:: __ifloordiv__(self, right: int) -> Uint


   .. method:: __mod__(self, right: int) -> Uint

      Return self%value.


   .. method:: __rmod__(self, left: int) -> Uint

      Return value%self.


   .. method:: __imod__(self, right: int) -> Uint


   .. method:: __divmod__(self, right: int) -> Tuple[Uint, Uint]

      Return divmod(self, value).


   .. method:: __rdivmod__(self, left: int) -> Tuple[Uint, Uint]

      Return divmod(value, self).


   .. method:: __pow__(self, right: int, modulo: Optional[int] = None) -> Uint

      Return pow(self, value, mod).


   .. method:: __rpow__(self, left: int, modulo: Optional[int] = None) -> Uint

      Return pow(value, self, mod).


   .. method:: __ipow__(self, right: int, modulo: Optional[int] = None) -> Uint


   .. method:: to_be_bytes32(self) -> Bytes32

      Converts this arbitrarily sized unsigned integer into its big endian
      representation with exactly 32 bytes.

      :returns: **big_endian** -- Big endian (most significant bits first) representation.
      :rtype: `Bytes32`


   .. method:: to_be_bytes(self) -> Bytes

      Converts this arbitrarily sized unsigned integer into its big endian
      representation.

      :returns: **big_endian** -- Big endian (most significant bits first) representation.
      :rtype: `Bytes`



.. data:: Bytes
   

   

.. data:: Bytes64
   

   

.. data:: Bytes32
   

   

.. data:: Bytes20
   

   

.. data:: Bytes8
   

   

.. data:: U256
   

   

