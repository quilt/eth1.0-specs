:mod:`eth1spec.crypto`
======================

.. py:module:: eth1spec.crypto

Cryptographic Functions
^^^^^^^^^^^^^^^^^^^^^^^

..contents:: Table of Contents
    :backlinks: none
    :local:

Introduction
------------

Cryptographic primatives used in—but not defined by—the Ethereum specification.


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::
   :nosignatures:

   eth1spec.crypto.keccak256
   eth1spec.crypto.keccak512
   eth1spec.crypto.secp256k1_recover



Module Details
---------------

keccak256
~~~~~~~~~


.. function:: keccak256(buffer: eth1spec.base_types.Bytes) -> eth1spec.eth_types.Hash32
   :noindexentry:

   Computes the keccak256 hash of the input `buffer`.

   :param buffer: Input for the hashing function.

   :returns: **hash** -- Output of the hash function.
   :rtype: `eth1spec.eth_types.Hash32`




.. undocinclude:: /../src/eth1spec/crypto.py
   :language: python
   :lines: 22-36

keccak512
~~~~~~~~~


.. function:: keccak512(buffer: eth1spec.base_types.Bytes) -> eth1spec.eth_types.Hash64
   :noindexentry:

   Computes the keccak512 hash of the input `buffer`.

   :param buffer: Input for the hashing function.

   :returns: **hash** -- Output of the hash function.
   :rtype: `eth1spec.eth_types.Hash32`




.. undocinclude:: /../src/eth1spec/crypto.py
   :language: python
   :lines: 39-53

secp256k1_recover
~~~~~~~~~~~~~~~~~


.. function:: secp256k1_recover(r: eth1spec.base_types.U256, s: eth1spec.base_types.U256, v: eth1spec.base_types.U256, msg_hash: eth1spec.eth_types.Hash32) -> eth1spec.base_types.Bytes
   :noindexentry:

   Recovers the public key from a given signature.

   :param r: TODO
   :param s: TODO
   :param v: TODO
   :param msg_hash: Hash of the message being recovered.

   :returns: **public_key** -- Recovered public key.
   :rtype: `eth1spec.base_types.Bytes`




.. undocinclude:: /../src/eth1spec/crypto.py
   :language: python
   :lines: 56-87
