:mod:`eth1spec.rlp`
===================

.. py:module:: eth1spec.rlp

Recursive Length Prefix (RLP) Encoding
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. contents:: Table of Contents
    :backlinks: none
    :local:

Introduction
------------

Defines the serialization and deserialization format used throughout Ethereum.


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::
   :nosignatures:

   eth1spec.rlp.encode
   eth1spec.rlp.R_b
   eth1spec.rlp.R_l
   eth1spec.rlp.s
   eth1spec.rlp.decode
   eth1spec.rlp.R_b_inverse
   eth1spec.rlp.R_l_inverse
   eth1spec.rlp.s_inverse
   eth1spec.rlp.decode_length



Attributes
~~~~~~~~~~

.. autoapisummary::

   eth1spec.rlp.verbose
   eth1spec.rlp.debug
   eth1spec.rlp.RLP


Module Details
---------------

verbose
~~~~~~~

.. data:: verbose
   :annotation: = False

   


debug
~~~~~

.. data:: debug
   :annotation: = False

   


RLP
~~~

.. data:: RLP
   

   


encode
~~~~~~


Encodes `x` into a sequence of bytes using RLP.


.. function:: encode(x: RLP) -> eth1spec.eth_types.Bytes
   :noindexentry:




.. literalinclude:: /../src/eth1spec/rlp.py
   :language: python
   :lines: 29-52

R_b
~~~


Encodes `x`, a sequence of bytes, using RLP.


.. function:: R_b(x: eth1spec.eth_types.Bytes) -> eth1spec.eth_types.Bytes
   :noindexentry:




.. literalinclude:: /../src/eth1spec/rlp.py
   :language: python
   :lines: 56-79

R_l
~~~


Encodes `x`, a list of RLP encodable objects, using RLP.


.. function:: R_l(x: Sequence[RLP]) -> eth1spec.eth_types.Bytes
   :noindexentry:




.. literalinclude:: /../src/eth1spec/rlp.py
   :language: python
   :lines: 83-105

s
~


Partially encodes `x`, a list of RLP encodable objects, using RLP,


.. function:: s(x: Sequence[RLP]) -> eth1spec.eth_types.Bytes
   :noindexentry:




.. literalinclude:: /../src/eth1spec/rlp.py
   :language: python
   :lines: 109-129

decode
~~~~~~


Decodes an integer, byte sequence, or list of RLP encodable objects from


.. function:: decode(b: eth1spec.eth_types.Bytes) -> RLP
   :noindexentry:




.. literalinclude:: /../src/eth1spec/rlp.py
   :language: python
   :lines: 135-157

R_b_inverse
~~~~~~~~~~~


Decodes a byte sequence from the byte sequence `b`, using RLP.


.. function:: R_b_inverse(b: eth1spec.eth_types.Bytes) -> eth1spec.eth_types.Bytes
   :noindexentry:




.. literalinclude:: /../src/eth1spec/rlp.py
   :language: python
   :lines: 160-183

R_l_inverse
~~~~~~~~~~~


Decodes `b` into a list of RLP encodable objects, using RLP.


.. function:: R_l_inverse(b: eth1spec.eth_types.Bytes) -> List[RLP]
   :noindexentry:




.. literalinclude:: /../src/eth1spec/rlp.py
   :language: python
   :lines: 186-211

s_inverse
~~~~~~~~~


Decodes `b`, a partially encoded list of RLP encodable objects, excluding


.. function:: s_inverse(b: eth1spec.eth_types.Bytes) -> List[RLP]
   :noindexentry:




.. literalinclude:: /../src/eth1spec/rlp.py
   :language: python
   :lines: 214-242

decode_length
~~~~~~~~~~~~~


Decodes the length prefix from the byte sequence `b`.


.. function:: decode_length(b: eth1spec.eth_types.Bytes) -> Tuple[eth1spec.base_types.Uint, eth1spec.base_types.Uint]
   :noindexentry:




.. literalinclude:: /../src/eth1spec/rlp.py
   :language: python
   :lines: 248-283
