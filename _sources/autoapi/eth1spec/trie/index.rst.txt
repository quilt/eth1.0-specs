:mod:`eth1spec.trie`
====================

.. py:module:: eth1spec.trie

State Trie
^^^^^^^^^^

.. contents:: Table of Contents
    :backlinks: none
    :local:

Introduction
------------

The state trie is the structure responsible for storing
`eth1spec.eth_types.Account` objects.


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::
   :nosignatures:

   eth1spec.trie.HP
   eth1spec.trie.f
   eth1spec.trie.HP_inverse
   eth1spec.trie.y
   eth1spec.trie.TRIE
   eth1spec.trie.n
   eth1spec.trie.c



Attributes
~~~~~~~~~~

.. autoapisummary::

   eth1spec.trie.debug
   eth1spec.trie.verbose
   eth1spec.trie.T


Module Details
---------------

debug
~~~~~

.. data:: debug
   :annotation: = False

   


verbose
~~~~~~~

.. data:: verbose
   :annotation: = False

   


HP
~~


Hex prefix encoding.


.. function:: HP(x: eth1spec.base_types.Bytes, t: Union[bool, int]) -> bytearray
   :noindexentry:




.. literalinclude:: /../src/eth1spec/trie.py
   :language: python
   :lines: 26-56

f
~


Encodes `t` as a bit flag.


.. function:: f(t: Union[bool, int]) -> int
   :noindexentry:




.. literalinclude:: /../src/eth1spec/trie.py
   :language: python
   :lines: 59-76

HP_inverse
~~~~~~~~~~


Hex prefix decoding.


.. function:: HP_inverse(buffer: eth1spec.base_types.Bytes) -> Tuple[str, bool]
   :noindexentry:




.. literalinclude:: /../src/eth1spec/trie.py
   :language: python
   :lines: 79-102

T
~

.. data:: T
   

   


y
~


TODO


.. function:: y(J: Mapping[eth1spec.base_types.Bytes, T], secured: bool = True) -> Mapping[eth1spec.base_types.Bytes64, T]
   :noindexentry:




.. literalinclude:: /../src/eth1spec/trie.py
   :language: python
   :lines: 108-138

TRIE
~~~~


Computes the root hash of the storage trie.


.. function:: TRIE(J: Mapping[eth1spec.base_types.Bytes, Union[eth1spec.eth_types.Account, eth1spec.base_types.Bytes, eth1spec.eth_types.Receipt, eth1spec.base_types.Uint, eth1spec.base_types.U256]]) -> eth1spec.eth_types.Root
   :noindexentry:




.. literalinclude:: /../src/eth1spec/trie.py
   :language: python
   :lines: 141-159

n
~


Node composition function.


.. function:: n(J: Mapping[eth1spec.base_types.Bytes, Union[eth1spec.base_types.Bytes, eth1spec.eth_types.Account, eth1spec.eth_types.Receipt, eth1spec.base_types.Uint, eth1spec.base_types.U256]], i: eth1spec.base_types.U256) -> eth1spec.base_types.Bytes
   :noindexentry:




.. literalinclude:: /../src/eth1spec/trie.py
   :language: python
   :lines: 162-188

c
~


Structural composition function.


.. function:: c(J: Mapping[eth1spec.base_types.Bytes, Union[eth1spec.base_types.Bytes, eth1spec.eth_types.Account, eth1spec.eth_types.Receipt, eth1spec.base_types.Uint, eth1spec.base_types.U256]], i: eth1spec.base_types.U256) -> eth1spec.base_types.Bytes
   :noindexentry:




.. literalinclude:: /../src/eth1spec/trie.py
   :language: python
   :lines: 191-306
